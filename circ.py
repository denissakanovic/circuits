# TITLE: circuits that are discretely mathematical 

def fig_circ():
    circuits = {
    # \\ for spacing

    #---------------------------------------------------------------------
    #                                SINGLE
    #---------------------------------------------------------------------
       
    'P^Q': """
    P--------\\
            AND---- Output
    Q--------/      
    """,

   'PvQ': """
    P--------\\
             OR---- Output
    Q--------/ 
    """,

    '_P^Q': """
    P--NOT---\\
             AND---- Output
    Q--------/        
    """,

    '_PvQ': """
    P--NOT---\\
             OR---- Output
    Q--------/    
    """,

    'P^_Q': """
    P--------\\
             AND---- Output
    Q--NOT---/    
    """,

    'Pv_Q': """
    P--------\\
             OR---- Output
    Q--NOT---/    
    """,

    '_P^_Q': """
    P--NOT---\\
             AND---- Output
    Q--NOT---/    
    """,

    '_Pv_Q': """
    P--NOT---\\
             OR---- Output
    Q--NOT---/    
    """,

    #---------------------------------------------------------------------
    #                                DOUBLE
    #---------------------------------------------------------------------

    '(P^_Q)v(_P^_Q)': """
    P--------\\
              AND---------\\
    Q---NOT--/             \\
                            OR----OUTPUT
    P---NOT--\             /
              AND---------/
    Q---NOT--/  
    """,
    
    '(_P^Q)v(_P^_Q)': """
    P---NOT--\\
              AND-----------|
    Q--------/              |
                            OR----OUTPUT
    P---NOT--\              /
              AND----------/
    Q---NOT--/  
    """,
    
    '(P^Q)v(_P^_Q)': """
    P--------\\
              AND---------\\
    Q--------/             \\
                            OR----OUTPUT
    P---NOT--\             /
              AND---------/
    Q---NOT--/  
    """,
    
    '(_P^Q)v(P^_Q)': """
    P---NOT--\\
              AND---------\\
    Q--------/             \\
                            OR----OUTPUT
    P--------\             /
              AND---------/
    Q---NOT--/  
    """,
    
    '(_P^Q)v(_P^_Q)': """
    P---NOT--\\
              AND---------\\
    Q--------/             \            
                            OR----OUTPUT
    P---NOT--\             /
              AND---------/
    Q---NOT--/  
    """,

    #---------------------------------------------------
    #-----------------TRIPLES---------------------------
    #---------------------------------------------------

    '(P^_Q)v(_P^Q)v(_P^_Q)': """
    P--------\\
              AND----\\
    Q---NOT--/        \    
                       OR-----\   
    P---NOT--\        /        \ 
              AND----/          \\
    Q--------/                   OR----OUTPUT
                                /
    P---NOT--\                 /
              AND-------------/
    Q---NOT--/ 
    """,

    '(P^Q)v(_P^Q)v(_P^_Q)': """
    P--------\\
              AND----\\
    Q--------/        \    
                       OR-----\   
    P---NOT--\        /        \ 
              AND----/          \\
    Q--------/                   OR----OUTPUT
                                /
    P---NOT--\                 /
              AND-------------/
    Q---NOT--/ 
    """,

    '(P^Q)v(P^_Q)v(_P^_Q)': """
    P--------\\
              AND----\\
    Q--------/        \    
                       OR-----\   
    P--------\        /        \ 
              AND----/          \\
    Q---NOT--/                   OR----OUTPUT
                                /
    P---NOT--\                 /
              AND-------------/
    Q---NOT--/ 
    """,
    
    '(P^Q)v(P^_Q)v(_P^Q)': """
    P--------\\
              AND----\\
    Q--------/        \    
                       OR-----\   
    P--------\        /        \ 
              AND----/          \\
    Q---NOT--/                   OR----OUTPUT
                                /
    P---NOT--\                 /
              AND-------------/
    Q--------/ 
    """,

    #---------------------------------------------------
    #-----------------QUAD------------------------------
    #---------------------------------------------------

    '(P^Q)v(P^_Q)v(_P^Q)v(_P^_Q)': """
    P--------\\
              AND----\\
    Q--------/        \    
                       OR-----\   
    P--------\        /        \ 
              AND----/          \\
    Q---NOT--/                   OR----\\
                                /       \\
    P---NOT--\                 /         OR----OUTPUT
              AND-------------/         /  
    Q--------/                         /
                                      /
    P---NOT--\                       /
              AND-------------------/
    Q---NOT--/ 

    """,
    }

    #print(circuits['_P^_Q'])   if u want to print invdividual circuit
    for circuit_id, cir in circuits.items():
     print(f"{circuit_id}:")
     print(cir)
     print()  #

if __name__ == "__main__":
    fig_circ()

